---
- name: Install dependencies for role {{ role_name }}
  become: true
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl

- name: Create /etc/apt/keyrings if not exists
  become: true
  file:
    path: "/etc/apt/keyrings"
    state: directory
    mode: "0755"

- name: Add kubeadm apt key
  become: true
  apt_key:
    url: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_major_version }}/deb/Release.key"
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    state: present

- name: Add kubeadm apt repository
  become: true
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_major_version }}/deb/ /"
    state: present
    filename: kubeadm

- name: Install kubelet kubeadm kubectl
  become: true
  apt:
    update_cache: true
    pkg:
      - "kubelet={{ kubernetes_default_version }}"
      - "kubeadm={{ kubernetes_default_version }}"
      - "kubectl={{ kubernetes_default_version }}"

- name: Hold kubelet kubeadm kubectl
  become: true
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable CRI plugin
  become: true
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^disabled_plugins\s*=\s*\[.*\]$'
    line: 'enabled_plugins = ["cri"]'

- name: Add CRI configuration
  become: true
  blockinfile:
    path: /etc/containerd/config.toml
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      [plugins."io.containerd.grpc.v1.cri".containerd]
        endpoint = "unix:///var/run/containerd/containerd.sock"
    insertafter: "^enabled_plugins =.*$"

- name: Restart containerd service
  become: true
  systemd:
    name: containerd
    state: restarted
